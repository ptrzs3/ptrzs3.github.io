<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vscode on 发疯空间</title>
    <link>https://ptrzs3.github.io/tags/vscode/</link>
    <description>Recent content in vscode on 发疯空间</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 13 Oct 2023 20:53:22 +0800</lastBuildDate><atom:link href="https://ptrzs3.github.io/tags/vscode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VSCode配置C&#43;&#43;开发环境（MSVC）</title>
      <link>https://ptrzs3.github.io/posts/vscode/</link>
      <pubDate>Fri, 13 Oct 2023 20:53:22 +0800</pubDate>
      
      <guid>https://ptrzs3.github.io/posts/vscode/</guid>
      <description>前置知识Link to heading这些内容如果感兴趣可以看一下，不看也不妨碍配置环境，因为我会一步步教你配置。（但我希望你还是看一下，毕竟我写了好久🤣）
C/C++编译器有哪些Link to heading注意我们说的是编译器，而不是集成开发环境（IDE，Integrated Development Environment）。我们平常用的Codeblocks，Visual Studio Code，Dev C++等软件都是开发环境，而不是编译器。
常用的C/C++编译器（更确切地说是编译器套件）有：GCC、MinGW、MSVC等。不同的编译器附有不同的库文件，如果某段代码只用了标准库，那么这段代码很可能用任意C/C++编译器都可以编译通过；而如果某段代码用了特定编译器独有的库文件，那这段代码很可能只能用特定编译器才能编译通过，甚至对该编译器的版本也有要求。
Windows系统的环境变量Link to heading什么是环境变量Link to heading​	环境变量是在操作系统中一个具有特定名字的对象，它包含了一个或者多个应用程序所将使用到的信息（不好理解）。
​	按照下面的方式查看Windows 10的环境变量
​	可以看到环境变量分为两部分：用户变量和系统变量
用户变量：只对当前用户生效，优先级高于系统变量 系统变量：对所有用户生效 ​	你也可以将环境变量理解为一个指针。我们在环境变量中定义一个名为“JAVA_HOME”的变量，它指向jdk的安装目录。在某段代码中你可能经常使用jdk作为参数，但如果jdk的安装目录变了，怎么办？你在程序中如果直接使用jdk的绝对路径，那你就从代码中找出来一个个地改吧；而如果你在程序中使用JAVA_HOME这个环境变量，当jdk的安装目录发生变化时，你只要改一下JAVA_HOME的内容即可，而你的代码无需任何修改，因为你的代码使用的是JAVA_HOME，而不是jdk的绝对路径。
​	想象这样一个场景：你编写了一个个性化的计算器软件，软件的路径为：D:\softwares\myself\calc.exe
​	当你每次启动时，要么用文件管理器找到这个软件双击运行，要么通过命令行D:\softwares\myself\calc.exe执行。诚然，这两种方式耗费精力都差不多，因为calc.exe并没有位于很深层的目录下。那如果calc.exe位于第10层，甚至第100层目录呢，是不是每次打开这个软件很费劲？因为你要么需要打开100层文件夹，要么在命令行输入calc.exe的路径，都是很费劲的方法（当然你可以创建快捷方式，但我们先不考虑这种方法）。
​	这时候，你就可以把calc.exe所在的目录添加到用户变量的Path变量下（你也可以添加到系统变量的Path下，这样就对所有用户生效了），这样每次执行calc.exe都不需要在命令行中输入那么一长串路径，而只需要输入calc.exe或者calc即可。
Path环境变量Link to heading​	Path是个很重要的环境变量，他里面存储的一般是一系列可执行文件的目录。
​	下图所示是系统变量中的Path存储的内容，每一行代表一个目录，许多目录都是以“bin”（binary的缩写）结尾，代表该目录下存储了一些二进制的可执行文件。执行这些目录下的可执行文件不需要加一长串的路径，只需要在命令行输入可执行文件的名称即可。
其他环境变量Link to heading​	比如我们前面提到的“JAVA_HOME”环境变量，这其实就是一个普通的环境变量。你可以随便定义自己的环境变量，比如isjks：wwoqsi。你可以在命令行中执行echo %isjks%，会输出wwoqsi。当然这个并没有任何意义，我只是告诉你你可以随便定义自己的环境变量，无论这个变量有没有什么用。
​	在上面一张图中，我们发现有些被百分号“%”包裹起来的东西，这些被包裹起来的，其实是已经定义的环境变量。比如SystemRoot的内容就是“C:\WINDOWS”。有些环境变量并没有在环境变量列表中被列出来，因此无法直接看到它的值。如果你对任何环境变量感兴趣，可以在命令行中执行echo %&amp;lt;ENV_VAR&amp;gt;%来查看它代表的内容。
安装Visual Studio CodeLink to heading​	这个没有难度，自己安装即可。vscode安装完成后会把自己加到环境变量，提示需要重启一下电脑。
安装VIsual Studio及相关附件Link to heading​	在这里下载installer，选择社区版即可。</description>
    </item>
    
  </channel>
</rss>
